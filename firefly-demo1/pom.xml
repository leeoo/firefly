<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.firefly</groupId>
    <artifactId>firefly-demo1</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>${project.artifactId} Maven Webapp</name>
    <url>http://maven.apache.org</url>
    <build>
        <finalName>${project.artifactId}</finalName>
        <defaultGoal>install</defaultGoal>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <filtering>true</filtering>
                <directory>src/main/webapp</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
        	<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1</version>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.26</version>
                <configuration>
                	<stopKey>foo</stopKey>
                	<stopPort>9999</stopPort>
                    <contextPath>/${project.artifactId}</contextPath>
                    <scanIntervalSeconds>0</scanIntervalSeconds>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.bio.SocketConnector">
                            <port>8081</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                    <scanTargetPatterns>
                        <scanTargetPattern>
                            <directory>
								src/main/webapp/WEB-INF
                            </directory>
                            <excludes>
                                <exclude>**/*.jsp</exclude>
                            </excludes>
                            <includes>
                                <include>**/*.properties</include>
                                <include>**/*.xml</include>
                            </includes>
                        </scanTargetPattern>
                    </scanTargetPatterns>
                </configuration>
            </plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.4</version>
				<dependencies>
				  <!-- specify the dependent jdbc driver here -->
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>${h2.version}</version>
					</dependency>
				</dependencies>
				<!-- common configuration shared by all executions -->
				<configuration>
				  <driver>${jdbc.driverClassName}</driver>
				  <url>${jdbc.url}</url>
				  <username>${jdbc.username}</username>
				  <password>${jdbc.password}</password>
				  <skip>${maven.test.skip}</skip>
				</configuration>

				<executions>
					<execution>
						<id>drop-db-before-test-if-any</id>
						<phase>process-test-resources</phase>
						<goals>
						  <goal>execute</goal>
						</goals>
						<configuration>
						<sqlCommand>DROP ALL OBJECTS</sqlCommand>
						  <!-- ignore error when database is not avaiable -->
						    <onError>continue</onError>
						</configuration>
					</execution>

					<execution>
					  <id>create-schema-and-data</id>
					  <phase>process-test-resources</phase>
					  <goals>
					    <goal>execute</goal>
					  </goals>
					  <configuration>
					    <orderFile>ascending</orderFile>
					    <encoding>utf-8</encoding>
					    <fileset>
					      <basedir>${basedir}</basedir>
					      <includes>
					        <include>sql/${project.artifactId}.sql</include>
					      </includes>
					    </fileset>
					  </configuration>
					</execution>

					<!-- drop db after test -->
					<execution>
					  <id>drop-db-after-test</id>
					  <phase>test</phase>
					  <goals>
					    <goal>execute</goal>
					  </goals>
					  <configuration>
					    <sqlCommand>drop database ${project.artifactId}</sqlCommand>
					  </configuration>
					</execution>
 				</executions>
			</plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
			  	<groupId>org.zeroturnaround</groupId>
			 	<artifactId>javarebel-maven-plugin</artifactId>
			 	<version>1.0.5</version>
			  	<executions>
			    	<execution>
			      	<id>generate-rebel-xml</id>
			      	<phase>process-resources</phase>
			      	<goals>
			        	<goal>generate</goal>
			      	</goals>
			    	</execution>
			  	</executions>
			</plugin>
        </plugins>
    </build>

    <dependencies>
		<dependency>
		    <groupId>com.firefly</groupId>
		    <artifactId>firefly</artifactId>
		    <version>1.1-SNAPSHOT</version>
		</dependency>

        <!-- junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>

        <!-- servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
        <dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp</artifactId>
			<version>${bonecp.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
		</dependency>
    </dependencies>

    <properties>
    	<!-- project -->
    	<project.groupId>com.firefly</project.groupId>
    	<project.artifactId>firefly-demo1</project.artifactId>

		<!-- log -->
		<slf4j.version>1.6.1</slf4j.version>
		<logback.version>0.9.28</logback.version>

		<!-- common -->
		<jstl.version>1.1.2</jstl.version>

        <log.level>INFO</log.level>
        <log.path>D:/log/app-demo.log</log.path>
        
        <!-- database -->
        <bonecp.version>0.7.0</bonecp.version>
        <h2.version>1.3.153</h2.version>
        <jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
		<jdbc.url>
			jdbc:h2:~/firefly
        </jdbc.url>
        <jdbc.username>firefly</jdbc.username>
        <jdbc.password>123456</jdbc.password>
    </properties>
    <profiles>
    	<profile>
    		<id>mac</id>
    		<properties>
    			<log.level>INFO</log.level>
    			<log.path>/Users/qiupengtao/develop/logs/app.log</log.path>
    		</properties>
    	</profile>
    </profiles>
    <repositories>
        <repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<id>bonecp-repo</id>
			<name>BoneCP Repository</name>
			<url>http://jolbox.com/bonecp/downloads/maven</url>
		</repository>
		<repository>
			<id>dev-demo</id>
        	<name>Snapshots</name>
	    	<url>http://localhost:7777/nexus-webapp/content/groups/public</url>
        </repository>
    </repositories>
    <pluginRepositories>

    </pluginRepositories>
    <distributionManagement>
    	<repository>
    		<id>3rdRepo</id>
    		<name>3rd party</name>
    		<url>http://localhost:7777/nexus-webapp-1.6.0/content/repositories/thirdparty</url>
    	</repository>
    	<snapshotRepository>
	    	<id>dev</id>
	    	<name>Snapshots</name>
	    	<url>http://localhost:7777/nexus-webapp-1.6.0/content/repositories/snapshots</url>
		</snapshotRepository>
    </distributionManagement>
</project>